@model PTRex.Models.TargetWorkout

@{
    ViewBag.Title = "Create";
}

<h2>Add an Exercise to Your Workout Plan</h2>
<<<<<<< HEAD

=======
>>>>>>> origin

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Choose an Exercise from the Dropdown Menu</h4>
        <p>Then enter the number of times the exercise is to be done per day, number of sets per session, and number of reps per set.</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseID, "Formal Exercise Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExerciseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExerciseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--userprofile can be hidden from view   @Html.HiddenFor(model => model.UserProfileID)   but still needs to b there -session variable!-->
      

        <div class="form-group">
            @Html.LabelFor(model => model.UserProfileID, "User Profile ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserProfileID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserProfileID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Here you will be able to input a nickname for the exercises (so you remember it better)-->
        <div class="form-group">
        @Html.LabelFor(model => model.ExerciseNickName, "Nickname for this Exercise", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ExerciseNickName, new { htmlattributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExerciseNickName, "", new { @class = "text-danger" })
        </div>
    </div>

  
            
          

        <!------------------------------SESSIONS PER DAY -->
        <div class="form-group">
            @Html.LabelFor(model => model.TargetSessionsPerDay, "# Sessions per Day", htmlAttributes: new { @class = "control-label col-md-2" })
<<<<<<< HEAD
=======
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetSessionsPerDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TargetSessionsPerDay, "", new { @class = "text-danger" })
            </div>
        </div>


        <!------------------------------SETS PER SESSION -->
        <div class="form-group">
            @Html.LabelFor(model => model.TargetNumSets, "#Sets per Session", htmlAttributes: new { @class = "control-label col-md-2" })
>>>>>>> origin
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetSessionsPerDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TargetSessionsPerDay, "", new { @class = "text-danger" })
            </div>
        </div>


<<<<<<< HEAD
        <!------------------------------SETS PER SESSION -->
        <div class="form-group">
            @Html.LabelFor(model => model.TargetNumSets, "#Sets per Session", htmlAttributes: new { @class = "control-label col-md-2" })
=======
        <!------------------------------REPS PER SET -->
        <div class="form-group">
            @Html.LabelFor(model => model.TargetNumReps, "#Reps per Set", htmlAttributes: new { @class = "control-label col-md-2" })
>>>>>>> origin
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetNumSets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TargetNumSets, "", new { @class = "text-danger" })
            </div>
        </div>

<<<<<<< HEAD

        <!------------------------------REPS PER SET -->
        <div class="form-group">
            @Html.LabelFor(model => model.TargetNumReps, "#Reps per Set", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetNumReps, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TargetNumReps, "", new { @class = "text-danger" })
=======
       
        

        <!------------------------------USER NOTES-- NEED TO ADD DEFAULT TEXT CANNOT BE NULL OR WILL GET AN ERROR!!-->
        <div class="form-group">
            @Html.LabelFor(model => model.TargetNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TargetNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TargetNotes, "", new { @class = "text-danger" })
>>>>>>> origin
            </div>
        </div>

       
        

        <!------------------------------USER NOTES-- NEED TO ADD DEFAULT TEXT CANNOT BE NULL OR WILL GET AN ERROR!!-->
        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseNickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExerciseNickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExerciseNickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
